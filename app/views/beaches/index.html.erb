<style>
  /* Always set the map height explicitly to define the size of the div
   * element that contains the map. */
  #map {
    height: 100%;
  }
  /* Optional: Makes the sample page fill the window. */
  html, body {
    height: 100%;
    margin: 0;
    padding: 0;
  }
  #floating-panel {
    position: absolute;
    top: 10px;
    left: 25%;
    z-index: 5;
    background-color: #fff;
    padding: 5px;
    border: 1px solid #999;
    text-align: center;
    font-family: 'Roboto','sans-serif';
    line-height: 30px;
    padding-left: 10px;
  }
</style>

<p id="notice"><%= notice %></p>

<h1>Beaches</h1>

<table>
  <thead>
    <tr>
      <th>Name</th>
      <th>Latitude</th>
      <th>Longitude</th>
      <th colspan="3"></th>
    </tr>
  </thead>

  <tbody>
    <% @beaches.each do |beach| %>
      <tr>
        <td><%= beach.name %></td>
        <td><%= beach.lat %></td>
        <td><%= beach.lng %></td>
        <td><%= link_to 'Show', beach %></td>
        <td><%= link_to 'Edit', edit_beach_path(beach) %></td>
        <td><%= link_to 'Destroy', beach, method: :delete, data: { confirm: 'Are you sure?' } %></td>
      </tr>
    <% end %>
  </tbody>
</table>

<br>

<%= link_to 'Add New Beach', new_beach_path %>

<hr>

<%= link_to 'Add all', add_pins_beaches_path, remote: true %><br>
<%= link_to 'Add one', add_pin_beaches_path, remote: true %><br>
<%= link_to 'Remove All', remove_all_pins_beaches_path, remote: true %><br>

<hr>

<div id="map"></div>

<script>
  // In the following example, markers appear when the user clicks on the map.
  // The markers are stored in an array.
  // The user can then click an option to hide, show or delete the markers.
  var map;
  var markers = [];

  function initMap() {
    var center = {lat: -33.9, lng: 151.2}

    map = new google.maps.Map(document.getElementById('map'), {
      zoom: 12,
      center: center,
      mapTypeId: 'terrain'
    });

    // Adds a marker at the center of the map.
    addMarker('Sidney', center.lat, center.lng);
  }

  // Adds a marker to the map and push to the array.
  function addMarker(title, lat, lng) {
    var marker = new google.maps.Marker({
      position: {lat: lat, lng: lng},
      map: map,
      title: title
    });
    markers.push(marker);
  }

  // Sets the map on all markers in the array.
  function setMapOnAll(map) {
    for (var i = 0; i < markers.length; i++) {
      markers[i].setMap(map);
    }
  }

  // Removes the markers from the map, but keeps them in the array.
  function clearMarkers() {
    setMapOnAll(null);
  }

  // Shows any markers currently in the array.
  function showMarkers() {
    setMapOnAll(map);
  }

  // Deletes all markers in the array by removing references to them.
  function deleteMarkers() {
    clearMarkers();
    markers = [];
  }
</script>

<script async defer
  src="https://maps.googleapis.com/maps/api/js?key=<%= ENV["GOOGLE_API_KEY"] %>&callback=initMap">
</script>
